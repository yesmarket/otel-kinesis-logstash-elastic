version: "3.5"

networks:
   skynet:

volumes:
   logs: {}
   elasticsearch-data: {}
   localstack-data: {}

services:
   # elasticsearch:
   #    build:
   #       context: elasticsearch/
   #    hostname: elasticsearch
   #    container_name: elasticsearch
   #    volumes:
   #       - elasticsearch-data:/usr/share/elasticsearch/data
   #    restart: unless-stopped
   #    environment:
   #       ES_JAVA_OPTS: "-Xmx256m -Xms256m"
   #    ports:
   #       - 9200:9200
   #       - 9300:9300
   #    networks:
   #       - skynet

   # test:
   #    build:
   #       context: test-service/
   #    hostname: test
   #    container_name: test
   #    ports:
   #       - 5001:5001
   #    volumes:
   #       - logs:/var/log
   #    networks:
   #       - skynet

   # otel:
   #    build:
   #       context: otel/
   #    hostname: otel
   #    container_name: otel
   #    environment:
   #       AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
   #       AWS_SECRET_KEY: $AWS_SECRET_KEY
   #       AWS_SESSION_TOKEN: $AWS_SESSION_TOKEN
   #    restart: always
   #    ports:
   #       - 4317:4317
   #       - 4318:4318
   #       - 6831:6831
   #       - 8126:8126
   #       - 14268:14268
   #    volumes:
   #       - logs:/var/log
   #    networks:
   #       - skynet
   #    depends_on:
   #       - test

   localstack:
      #image: localstack/localstack
      build:
         context: localstack/
      hostname: localstack
      container_name: localstack
      ports:
         - 4566:4566
         - 4510-4559:4510-4559
      environment:
         - SERVICES=kinesis,dynamodb
         - DEBUG=1
         - DOCKER_HOST=unix:///var/run/docker.sock
         #- DEFAULT_REGION=us-west-2
         - AWS_ACCESS_KEY_ID=dummyaccess
         - AWS_SECRET_ACCESS_KEY=dummysecret
         - AWS_DEFAULT_REGION=eu-west-1
      command:
         [
            "./wait-for-it.sh",
            "192.168.99.106:4566",
            "--",
            "./create-kinesis-stream.sh",
         ]
      volumes:
         - localstack-data:/tmp/localstack
         - /var/run/docker.sock:/var/run/docker.sock
      networks:
         - skynet

   # awslocal:
   #    image: mesosphere/aws-cli
   #    hostname: awslocal
   #    environment:
   #       - AWS_ACCESS_KEY_ID=dummy
   #       - AWS_SECRET_ACCESS_KEY=dummy
   #       - AWS_DEFAULT_REGION=us-west-2
   #    entrypoint: /bin/sh -c
   #    command: >
   #       "
   #          sleep 10;

   #          aws --endpoint-url=http://192.168.99.106:4566 kinesis create-stream --stream-name ryantestotelpoc --shard-count 1
   #       "
   #    networks:
   #       - skynet
   #    depends_on:
   #       - localstack
   #       - elasticsearch

   # logstash:
   #    build:
   #       context: logstash/
   #    container_name: logstash
   #    environment:
   #       LS_JAVA_OPTS: "-Xmx256m -Xms256m"
   #       AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
   #       AWS_SECRET_KEY: $AWS_SECRET_KEY
   #       AWS_SESSION_TOKEN: $AWS_SESSION_TOKEN
   #    networks:
   #       - skynet
   #    depends_on:
   #       - elasticsearch

   # kibana:
   #    build:
   #       context: kibana/
   #    hostname: kibana
   #    container_name: kibana
   #    restart: unless-stopped
   #    ports:
   #       - 5601:5601
   #    networks:
   #       - skynet
   #    depends_on:
   #       - elasticsearch
